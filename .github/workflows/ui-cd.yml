name: CD Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment (dev, test, stag, prod)'
        required: true
        type: string
      repository_path:
        description: 'Docker repo path environment (dev, test, stag, prod)'
        required: true
        type: string

jobs:
  cd-process:
    name: Build and push docker image to Docker-hub
    runs-on: ubuntu-latest
    # This is option 2: run on the runner of inputs
    # runs-on: ["${{ inputs.RUNNER }}"]

    # Prevents parallel execution of the same workflow on the same branch.
    # If a new workflow run starts for the same branch/ref, the previous run is canceled.
    concurrency:
      group: ${{ github.workflow }}-cd-process-${{ github.ref }}
      cancel-in-progress: true

    # Sets the environment dynamically using a GitHub Action input.
    # This value determines which environment (staging, production, etc.) the workflow is targeting.
    environment: ${{ inputs.environment }}

    steps:
      # Clones the repository into the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Login to docker hub using the credentials stored in GitHub secrets.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Executes a custom Docker build script (build.sh).
      # This likely builds a Docker image with the application.
      - name: Build Docker image
        run: |
          docker build -t temp .

      - name: Tag and Push to Docker Hub
        run: |
          IMAGE_LATEST="${{ inputs.repository_path }}:${{ github.sha }}"

          docker tag temp $IMAGE_LATEST
          docker push $IMAGE_LATEST
